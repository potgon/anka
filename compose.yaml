version: '2'
services:
  anka:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${ANKA_APP_PORT}
    networks:
      - anka-typhoon-network
    depends_on:
      - mysql
      - kafka
      - zookeeper

  mysql:
    image: 'mysql:latest'
    environment:
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_PASSWORD=${MYSQL_ROOT_PASS}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
      - MYSQL_USER=${MYSQL_USER}
    ports:
      - ${MYSQL_PORT}
    networks:
      - anka-typhoon-network
    volumes:
      - mysql-data:/var/lib/mysql

  zookeeper:
    image: 'bitnami/zookeeper:3.9.2'
    ports:
      - ${ZOOKEEPER_PORT}
    networks:
      - anka-typhoon-network
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka:
    image: 'bitnami/kafka:3.6.0'
    ports:
      - ${KAFKA_PORT}
    networks:
      - anka-typhoon-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://${KAFKA_ADVERTISED_LISTENERS_INSIDE},OUTSIDE://${KAFKA_ADVERTISED_LISTENERS_OUTSIDE}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP},OUTSIDE:${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_LISTENERS: INSIDE://${KAFKA_LISTENERS_INSIDE},OUTSIDE://${KAFKA_LISTENERS_OUTSIDE}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_CREATE_TOPICS: ${MODEL_QUEUE_TRAIN_TOPIC}
      KAFKA_CFG_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
    depends_on:
      - zookeeper

volumes:
  mysql-data:

networks:
  anka-typhoon-network:
    driver: bridge