version: '2'

networks:
  anka-typhoon-network:
    driver: bridge

services:
  anka:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MYSQL_URL=${MYSQL_URL}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ROOT_PASS=${MYSQL_ROOT_PASS}
      - MYSQL_DRIVER=${MYSQL_DRIVER}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      - GITHUB_OAUTH2_CLIENT_ID=${GITHUB_OAUTH2_CLIENT_ID}
      - GITHUB_OAUTH2_CLIENT_SECRET=${GITHUB_OAUTH2_CLIENT_SECRET}
    ports:
      - ${ANKA_APP_PORT}
    networks:
      - anka-typhoon-network
    depends_on:
      - mysql
      - kafka

  mysql:
    image: 'mysql:latest'
    environment:
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_PASSWORD=${MYSQL_ROOT_PASS}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
      - MYSQL_USER=${MYSQL_USER}
    ports:
      - ${MYSQL_PORT}
    networks:
      - anka-typhoon-network
    volumes:
      - mysql-data:/var/lib/mysql

  kafka:
    image: 'bitnami/kafka:3.6.0'
    ports:
      - ${KAFKA_PORT}
    networks:
      - anka-typhoon-network
    environment:
      - KAFKA_CFG_NODE_ID=${KAFKA_CFG_NODE_ID}
      - KAFKA_CFG_PROCESS_ROLES=${KAFKA_CFG_PROCESS_ROLES}
      - KAFKA_CFG_LISTENERS=${KAFKA_CFG_LISTENERS}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP}
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=${KAFKA_CFG_CONTROLLER_QUORUM_VOTERS}
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=${KAFKA_CFG_CONTROLLER_LISTENER_NAMES}
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka-data:/bitnami/kafka

volumes:
  mysql-data:
  kafka-data:
